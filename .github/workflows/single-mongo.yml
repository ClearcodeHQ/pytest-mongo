name: Run pytest tests

on:
  workflow_call:
    inputs:
      python-versions:
        description: 'Supported python versions'
        default: '["3.8", "3.9", "3.10", "3.11", "3.12", "pypy-3.9"]'
        required: false
        type: string
      mongo:
        description: 'MongoDB version'
        required: true
        type: number
      os:
        description: 'Operating system to run tests on'
        default: 'ubuntu-latest'
        required: false
        type: string
    secrets:
      codecov_token:
        description: 'Codecov token'
        required: false

jobs:
  tests:
    runs-on: ${{ inputs.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ${{ fromJSON(inputs.python-versions) }}
    env:
      OS: ${{ inputs.os }}
      PYTHON: ${{ matrix.python-version }}
      MOGODB: ${{ inputs.mongo }}

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install MongoDB
      uses: ankane/setup-mongodb@v1
      with:
        mongodb-version: ${{ inputs.mongo }}
    - name: Run test
      uses: fizyk/actions-reuse/.github/actions/pipenv@v2.4.7
      with:
        python-version: ${{ matrix.python-version }}
        command: pytest -n 0 --cov-report=xml
    - name: Run xdist test
      uses: fizyk/actions-reuse/.github/actions/pipenv@v2.4.7
      with:
        python-version: ${{ matrix.python-version }}
        command: pytest -n 1 --cov-report=xml:coverage-xdist.xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4.4.1
      with:
        flags: linux
        env_vars: OS, PYTHON, MONGODB
        fail_ci_if_error: false
